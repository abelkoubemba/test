{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAigAAAGdCAYAAAA44ojeAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjYuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/av/WaAAAACXBIWXMAAA9hAAAPYQGoP6dpAAA+q0lEQVR4nO3dd3wUdeLG8WfTNiEkGxIgBUIINfQSWgD11ChiOQsWFBFFxYL6Q0QOThEVBeU8CzZORUBEET2xoIcFFcWD0IuAdEkgJNTsppfd+f0RzRlFIWE3s7v5vF+veUFmZydPRrL7OPud71gMwzAEAADgRQLMDgAAAPBbFBQAAOB1KCgAAMDrUFAAAIDXoaAAAACvQ0EBAABeh4ICAAC8DgUFAAB4nSCzA9SGy+VSdna2IiIiZLFYzI4DAABOgWEYys/PV0JCggIC/vwciU8WlOzsbCUmJpodAwAA1EJWVpaaN2/+p9v4ZEGJiIiQVPkDRkZGmpwGAACcCofDocTExKr38T/jkwXll491IiMjKSgAAPiYUxmewSBZAADgdSgoAADA61BQAACA16GgAAAAr0NBAQAAXoeCAgAAvA4FBQAAeB0KCgAA8DoUFAAA4HVqXFC+/fZbXXLJJUpISJDFYtEHH3xQ7XHDMPTQQw8pPj5eYWFhSk9P186dO6ttc+zYMQ0bNkyRkZGKiorSzTffrIKCgtP6QQAAgP+ocUEpLCxUt27d9OKLL57w8enTp2vGjBmaOXOmMjIyFB4erkGDBqmkpKRqm2HDhmnLli364osvtHjxYn377bcaNWpU7X8KAADgVyyGYRi1frLFokWLFumyyy6TVHn2JCEhQffdd5/GjRsnSbLb7YqNjdWcOXM0dOhQbdu2TR07dtTq1avVq1cvSdKSJUt04YUXav/+/UpISDjp93U4HLLZbLLb7dyLBwAAH1GT92+33ixw7969ysnJUXp6etU6m82mvn37asWKFRo6dKhWrFihqKioqnIiSenp6QoICFBGRoYuv/zy3+23tLRUpaWlVV87HA53xgYAwC84XYYKSirkKCmXo6RcRWVOlZQ7VVLuUkm5U6UVrp+/rvx7aYVLhmHI6TLkNAwZRuU+nC5DvVo20sVdT37SwFPcWlBycnIkSbGxsdXWx8bGVj2Wk5Ojpk2bVg8RFKTo6OiqbX5r2rRpeuSRR9wZFQAAr2YYhhzFFTpcUKojPy9HC8qq/n6koEz2osoikl9SIUdxufJLK9z2/cucLv8pKJ4yceJEjR07tuprh8OhxMREExMBAHB6CkorlJ1XrAN5xTqYV6LsvOLKxV6s7LwS5dhLVOZ01Wrf1qAARYYFq6E1SNagAFmDAxUaFKDQ4ECFBlf+aQ0KUEhQgIICAmSxSIEWiwIDLLJYLAoMkLo1j3LvD1xDbi0ocXFxkqTc3FzFx8dXrc/NzVX37t2rtjl06FC151VUVOjYsWNVz/8tq9Uqq9XqzqgAAHico6Rc+44Uae/RQv10pFA/Vf1ZpGOFZae0j4jQIDVuaFXjhiE//2lVzM9/b9QgRJFhQYoIDVZkaJAiw4IVERoka1Cgh38yz3NrQUlOTlZcXJyWLl1aVUgcDocyMjJ0xx13SJLS0tKUl5entWvXKjU1VZL01VdfyeVyqW/fvu6MAwBAnThWWKYdufm/Wgq0+1CBjp6khNjCghVvC1WzqDDFR4UqISqs8u+2MMXbQtUkwqrQYN8vG7VR44JSUFCgXbt2VX29d+9ebdiwQdHR0WrRooXGjBmjxx57TG3btlVycrImTZqkhISEqit9OnTooAsuuEC33nqrZs6cqfLyct11110aOnToKV3BAwCAWcoqXNqRm68fDtj1Y87/ysiRgtI/fE7jhlYlN26gljHhatk4XC1jwpUU00BJMQ0UERpch+l9S40Lypo1a3T22WdXff3L2JARI0Zozpw5Gj9+vAoLCzVq1Cjl5eVp4MCBWrJkiUJDQ6ueM3/+fN11110699xzFRAQoCFDhmjGjBlu+HEAAHCP0gqntufka/MBu344YNcPBxzanpP/h+NCEqPD1D42Qm1jI9Q+NkJtmjZUy8bhamj1ieGeXue05kExC/OgAADcyTAMZR4r0rrM41q777jWZ+Zpe06+Kly/f4uMDA1Sl+Y2dYiLVLu4/5WRcIrISZk2DwoAAL6gpNypTfvtvyokx3Wk4PfjRRo1CFbnZjZ1bmZTl5+X5o3CZLFYTEhdv1BQAAB+r7jMqbX7jmvFniNasfuoNh+wq9xZ/exISGCAOjeLVM8WjdQzqZG6JUYpwRZKGTEJBQUA4HdKyp1at++4Vuw5qpV7jmpDVt7vCkmTCKtSWzRSalJlIencLNIvLs/1FxQUAIDPMwxD2w7ma9mOw1q245DW7cv73WDWeFuo0lrFqF/rGPVLjlFiNB/VeDMKCgDAJx0vLNN3u45o2fbD+nbnYR3Or36pb2yktbKQtIpRWusYtYhuQCHxIRQUAIBPMAxDPxxw6MttuVq247A27s/Tr69DDQsOVP/WMTqzXRMNbNtYrRqHU0h8GAUFAOC1SiucWrnnmL7YmqMvtx5SjqOk2uMpcRE6q10TndmuiXq1bMQYEj9CQQEAeBV7Ubm+3n5IX2zL1bLth1Xwqzv0NggJ1FntmujslKY6s20TxdlC/2RP8GUUFACA6Y4XlumzLTn6ZPNBrdh9tNoEaU0irErvEKvzO8YqrXVMvb03TX1DQQEAmCKvqEyfb8nV4s0H9f2uI3L+qpS0i22o9A6xOq9jrLo1j1JAAGNJ6hsKCgCgztiLyvX51sozJct3Hql2pqRjfKQu6hqvC7vEK7lxuIkp4Q0oKAAAjyqtcOrrHw9r0fr9+vrHw9XmJ0mJi9DFP5eSVk0ampgS3oaCAgBwO8MwtC7zuN5fd0CLNx2Uvbi86rH2sT+Xkq7xak0pwR+goAAA3Gbf0UK9v+6APthwQPuOFlWtj4206rLuzXR5z2ZKieMu9Dg5CgoA4LQUlzn16eaDemd1llb9dKxqfYOQQF3QOU5X9GiutNYxCmSgK2qAggIAqJUfDti1YHWmPlyfrfyf5yoJsEgD2zbRFT2a6fxOsWoQwtsMaod/OQCAU+YoKdeHG7L1zupM/XDAUbU+MTpM1/RK1JWpiUyeBregoAAATmpjVp7mrdynxZuyVVJeeRVOSGCABnWO09DeiUprFcNcJXArCgoA4IRKyp36ZNNBvbHiJ23cb69a37ZpQw3t00JX9GimRuEhJiaEP6OgAACq2X+8SPMzMvXO6iwdKyyTVHm25OKu8RrWL0k9W0Rxl2B4HAUFACDDMLR81xG9sWKflm7L1S8TvCbYQjWsX5KG9k5UTEOruSFRr1BQAKAeKyl36oP1B/Ta8r3adaigav2ANjG6Ia2lzk1pqqDAABMTor6ioABAPXS0oFTzVu7TvBX7dPTnj3EaWoM0pGczDU9LUpumESYnRH1HQQGAemTXoQLNWr5H/153QGUVlVfjNIsK000DWuqa3omKCA02OSFQiYICAH7OMAyt2H1Ury3fq69+PFS1vltzm245o5UGd47jYxx4HQoKAPgpl8vQl9ty9eI3u7UxK0+SZLFI53WI1S1ntFLvlo24Ggdei4ICAH6mwunS4k0H9dI3u7Qjt3Lga2hwgK5KTdTIgclKbhxuckLg5CgoAOAnSsqd+ve6/Zq5bLeyjhVLkiKsQbqhf5JuGpCsxlwmDB9CQQEAH1dYWqG3V2XqlW/36FB+qSQpOjxENw9M1vX9kmQLY+ArfA8FBQB8VGFphd5YsU+vfLtbx4vKJUnxtlCNOrOVhvZuobCQQJMTArVHQQEAH1NUVqE3V+7TzGV7qqaibxnTQHf8pbUu79FcIUFckQPfR0EBAB9RXObU/Ix9mrlst44UVBaTpJgGuuectrq0ewKXCsOvUFAAwMuVlDv1VkamXl62W4d/HmOSGB2me85pq8t7NKOYwC9RUADAS5VVuPTO6ky98PUu5Toqi0mzqDDdc24bXdGzuYIpJvBjFBQA8DIul6GPN2Xrn5/vUOaxIkmVxWT02W10ZSpjTFA/UFAAwEsYhqFvdx7R9CU/aku2Q5LUuKFV95zbRtf0TpQ1iKtyUH9QUADAC6zPPK4nl/yolXuOSaq8s/BtZ7bSyIHJCrfyUo36h3/1AGCiXYcK9I/PftRnW3IlSSGBARqelqTRZ7dRdHiIyekA81BQAMAERwpK9fQXO7RgVaZchhRgka7o2Vz3ntdOzaLCzI4HmI6CAgB1qKTcqdnf/6QXv96lgtIKSVJ6h1iNv6C92sVGmJwO8B4UFACoA4ZhaPGmg3riPz/qQF7ljfy6NLPpwYs6qG+rGJPTAd6HggIAHrY+87imLN6qdZl5kqS4yFCNv6C9LuveTAEBFnPDAV6KggIAHrL/eJGmL9mujzZmS5LCggN1+1mtdeuZyWoQwssv8Gf4DQEANysuc+rlZbv1r2W7VVrhksUiXdmzucYNaq/YyFCz4wE+gYICAG5iGIY+25KrKYu3Vo0z6ZscrUkXd1TnZjaT0wG+hYICAG6w61CBHvl4i77beUSSlGAL1YMXd9TgznGyWBhnAtQUBQUATkNBaYWeX7pTs5bvVYXLUEhggG47q5Xu+EtrxpkAp4HfHgCoBcMw9NHGbD3+yTYdyq+80/C5KU016eKOatk43OR0gO+joABADe3IzdeDH/ygVXsr75uTFNNAky/pqHNSYk1OBvgPCgoAnKLiMqee/2qnXvl2jypchsKCA3XXOW1088BkhQZzp2HAnSgoAHAKvtl+SJM+/EFZxyqvzjmvY6we/msn7psDeAgFBQD+xCFHiR5dvFWLNx2UJMXbQvXIXzvp/E5xJicD/BsFBQBOwOUyNH9Vpqb/50fll1YowCLdNCBZ957XTg2tvHQCnsZvGQD8xtZsh/6+aLM2ZOVJkro1t+nxy7sw2RpQhygoAPCzknKnZizdqX99u0dOl6GG1iCNv6C9hvVNUiA39QPqFAUFACSt3XdM49/bpN2HCyVJF3aJ0+RLOnHvHMAkAZ7YaX5+vsaMGaOkpCSFhYWpf//+Wr16ddXjhmHooYceUnx8vMLCwpSenq6dO3d6IgoA/KnC0go9/NEWXTlzhXYfLlSTCKv+NTxVLw1LpZwAJvJIQbnlllv0xRdfaN68edq8ebPOP/98paen68CBA5Kk6dOna8aMGZo5c6YyMjIUHh6uQYMGqaSkxBNxAOCEvtt5WIOe/VZz/vuTDEO6KrW5vrz3LA3iCh3AdBbDMAx37rC4uFgRERH68MMPddFFF1WtT01N1eDBgzVlyhQlJCTovvvu07hx4yRJdrtdsbGxmjNnjoYOHXrS7+FwOGSz2WS32xUZGenO+ADqAXtxuR7/ZKsWrtkvSWoWFaZpV3TRme2amJwM8G81ef92+xmUiooKOZ1OhYZWPzUaFham5cuXa+/evcrJyVF6enrVYzabTX379tWKFSvcHQcAqvl8S47Oe3qZFq7ZL4tFurF/S31+75mUE8DLuH2QbEREhNLS0jRlyhR16NBBsbGxevvtt7VixQq1adNGOTk5kqTY2Or3rIiNja167LdKS0tVWlpa9bXD4XB3bAB+zl5croc/2qJF6ys/am7VJFxPDumq3i2jTU4G4EQ8MgZl3rx5MgxDzZo1k9Vq1YwZM3TttdcqIKB2327atGmy2WxVS2JiopsTA/Bn3+44rEHPfKtF6w8owCLdflZrfXrPGZQTwIt5pKC0bt1ay5YtU0FBgbKysrRq1SqVl5erVatWiourHHyWm5tb7Tm5ublVj/3WxIkTZbfbq5asrCxPxAbgZwpLK/TAos264fVVynGUKLlxuN69vb8mDE7h5n6Al/NIQflFeHi44uPjdfz4cX322We69NJLlZycrLi4OC1durRqO4fDoYyMDKWlpZ1wP1arVZGRkdUWAPgzq/Ye0+DnvtP8jExJlWNNPr3nDKUmNTI5GYBT4ZGJ2j777DMZhqH27dtr165duv/++5WSkqKbbrpJFotFY8aM0WOPPaa2bdsqOTlZkyZNUkJCgi677DJPxAFQj5SUO/XPz7frteV7ZRiVV+j848qu6t+msdnRANSARwqK3W7XxIkTtX//fkVHR2vIkCF6/PHHFRwcLEkaP368CgsLNWrUKOXl5WngwIFasmTJ7678AYCa2LQ/T2MXbtSuQwWSKuc1mXRJR0WGBpucDEBNuX0elLrAPCgAfs3pMjRz2W4988UOVbgMNW5o1RNXdFF6x9iTPxlAnanJ+zf34gHg0/YfL9LYdzZq1U/HJFXeQ+exy7ooOjzE5GQATgcFBYDP+mhjth5YtFn5JRUKDwnUI5d21pCezWSxcOdhwNdRUAD4nPySck3+cIve/3nSte6JUXpuaHclxYSbnAyAu1BQAPiUtfuOa8w765V1rFgBFumuc9rq7nPaKDjQo7MmAKhjFBQAPqHC6dILX+/S81/tktNlqHmjMD17TXf1YjZYwC9RUAB4vaxjRRrzzgat3XdcknR5j2Z65NJOXD4M+DEKCgCvtuSHHI1/b6McJRWKsAbpscs769LuzcyOBcDDKCgAvFJphVPTPv1Rc/77k6TKgbDPX9tDidENzA0GoE5QUAB4nZ+OFOqut9fphwMOSdJtZ7bSuEHtGQgL1CMUFABe5aON2fr7+5tVUFqhRg2C9fTV3XV2SlOzYwGoYxQUAF6huMypRz7eogWrsyRJfZKj9dzQ7oq3hZmcDIAZKCgATLczN1+j31qnHbkFsliku89pq3vOaaMgPtIB6i0KCgBT/Xvtfj34wQ8qLneqSYRVz17TXQPaNDY7FgCTUVAAmKKk3KlHF2/VWxmZkqQz2jbW01d3V5MIq8nJAHgDCgqAOpd1rEh3zl+nzQfsslikMee2093ntFFAADf5A1CJggKgTn29/ZDGLNgge3G5ohoE67mhPXRWuyZmxwLgZSgoAOqE02XouS936Pmvd8kwpG7NbXpxWE81b8TEawB+j4ICwOOOFZbp/xas13c7j0iShvdL0oMXd5A1KNDkZAC8FQUFgEetzzyu0fPXKdteotDgAE27oosu79Hc7FgAvBwFBYBHGIahNzMy9ejHW1TuNNSqcbhevj5V7eMizI4GwAdQUAC4XWmFUw99sEXvrKmcFXZw5zhNv7KrIkKDTU4GwFdQUAC4VY69RLe/uVYbsvIUYJH+dkGKRp3ZShYLlxADOHUUFABus3bfMd3+5jodzi+VLSxYz1/bQ2dyCTGAWqCgAHCLtzIyNfmjH1TuNJQSF6F/DU9VUky42bEA+CgKCoDTUlbh0sMfb6masv7CLnH6x5XdFG7l5QVA7fEKAqDWDjlKdMf8dVq777gsFun+Qe11x1mtGW8C4LRRUADUyvrM47r9zbXKdZQqIjRIM67tobPbNzU7FgA/QUEBUGOL1u/X397brDKnS22bNtQrN/RScmPGmwBwHwoKgFPmchl66vPteumb3ZKk8zvG6ulruqsh400AuBmvKgBOSWFphe59Z4M+35orSRp9dmvdd157BQQw3gSA+1FQAJzUgbxi3TJ3jbYddCgkKEBPDuF+OgA8i4IC4E+t3Xdct81boyMFZWrcMET/Gt5LqUmNzI4FwM9RUAD8oV8Phu0QH6nXRvRSs6gws2MBqAcoKAB+50SDYZ+5pjuTrwGoM7zaAKimqKxCYxb8bzDsnX9prXHnMxgWQN2ioACocshRopFzV+uHAw6FBAboiSFddEVPBsMCqHsUFACSpB9zHBo5e7Wy7SWKDg/RqzekKjUp2uxYAOopCgoALd95RHe8uVb5pRVq1Thcs2/qzZ2IAZiKggLUcwtXZ+nvizarwmWoT8tovXJDqqIahJgdC0A9R0EB6inDMPTPz3foha93SZIu7Z6g6Vd2lTUo0ORkAEBBAeql0gqn7n93kz7amC1JuuecNrr3vHayWLhSB4B3oKAA9czxwjLdNm+tVv10TEEBFk29oouu7pVodiwAqIaCAtQjPx0p1E1zVmvvkUJFWIM0c3iqBrRpbHYsAPgdCgpQT2zMytPIOat1tLBMzaLCNPum3moXG2F2LAA4IQoKUA98vf2Q7nxznYrLnercLFKv39hbTSNCzY4FAH+IggL4uXfXZGnC+5vldBk6o21jzbw+lXvqAPB6vEoBfsowDL30zW7947PtkqQrejTTE0O6KiQowORkAHByFBTADzldhh75eIveWLFPknT7Wa31twvacxkxAJ9BQQH8TEm5U/e+s0H/+SFHFov00MUdddOAZLNjAUCNUFAAP2IvLtetb6zRqr3HFBIYoKev6aaLuyaYHQsAaoyCAviJg/Zi3fj6am3PzVeENUiv3NBLaa1jzI4FALVCQQH8wK5D+bph1ipl20vUNMKquSP7qEN8pNmxAKDWKCiAj9uYlacbZ6/S8aJytW4Srrkj+6h5owZmxwKA00JBAXzYf3cd0a1vrFFhmVPdEqM058beahQeYnYsADhtFBTAR322JUd3v7VeZU6XBrSJ0b+G91JDJmAD4Cd4NQN80MI1WZrw701yGdIFneL03LXdZQ0KNDsWALgNBQXwMa99t0ePfbJNknR1r+aaenkXBQUyOywA/+L2VzWn06lJkyYpOTlZYWFhat26taZMmSLDMKq2MQxDDz30kOLj4xUWFqb09HTt3LnT3VEAv2IYhp76bHtVORl1Zis9OaQr5QSAX3L7K9uTTz6pl19+WS+88IK2bdumJ598UtOnT9fzzz9ftc306dM1Y8YMzZw5UxkZGQoPD9egQYNUUlLi7jiAX3C6DD34wQ964etdkqT7B7XXxMEpTF0PwG9ZjF+f2nCDiy++WLGxsZo1a1bVuiFDhigsLExvvvmmDMNQQkKC7rvvPo0bN06SZLfbFRsbqzlz5mjo0KEn/R4Oh0M2m012u12Rkcz1AP9WVuHS2IUbtHjTQVks0pRLO+v6fklmxwKAGqvJ+7fbz6D0799fS5cu1Y4dOyRJGzdu1PLlyzV48GBJ0t69e5WTk6P09PSq59hsNvXt21crVqw44T5LS0vlcDiqLUB9UFzm1Kh5a7R400EFBVg0Y2gPygmAesHtg2QnTJggh8OhlJQUBQYGyul06vHHH9ewYcMkSTk5OZKk2NjYas+LjY2teuy3pk2bpkceecTdUQGvVlBaoVvmrtbKPccUGhygmden6i/tm5odCwDqhNvPoCxcuFDz58/XW2+9pXXr1mnu3Ll66qmnNHfu3Frvc+LEibLb7VVLVlaWGxMD3sdeXK7hszK0cs8xNbQGad7NfSknAOoVt59Buf/++zVhwoSqsSRdunTRvn37NG3aNI0YMUJxcXGSpNzcXMXHx1c9Lzc3V927dz/hPq1Wq6xWq7ujAl7pWGGZhs/K0JZsh2xhwXpjZB91S4wyOxYA1Cm3n0EpKipSQED13QYGBsrlckmSkpOTFRcXp6VLl1Y97nA4lJGRobS0NHfHAXzKofwSDX1lhbZkOxQTHqIFo/pRTgDUS24/g3LJJZfo8ccfV4sWLdSpUyetX79eTz/9tEaOHClJslgsGjNmjB577DG1bdtWycnJmjRpkhISEnTZZZe5Ow7gM7LzijXstQztPVKo2Eir5t/ST22aNjQ7FgCYwu0F5fnnn9ekSZN055136tChQ0pISNBtt92mhx56qGqb8ePHq7CwUKNGjVJeXp4GDhyoJUuWKDQ01N1xAJ+QebRI1722UvuPF6tZVJjeurWvkmLCzY4FAKZx+zwodYF5UOBPdh8u0LBXM5TjKFHLmAaaf2s/NYsKMzsWALhdTd6/uRcPYKIfcxy6/rUMHSkoU9umDTX/lr5qGsmZRACgoAAm2bzfruGvZyivqFwd4yM17+Y+imnI1WoAIFFQAFNszMrT9bMylF9Soe6JUZp7Ux/ZGgSbHQsAvAYFBahj6zOP64ZZq5RfWqHeLRtp9k191NDKryIA/BqvikAdWpd5XCN+Lid9kqM1+8beCqecAMDv8MoI1JG1+45rxOurVFBaoX6tovX6jb3VIIRfQQA4EV4dgTqw5qdjGvH6KhWWOZXWKkazbuxFOQGAP8ErJOBhq386pht/Lif9W8do1ojeCgsJNDsWAHg1CgrgQav2HtONs1epqMypgW0a69UbelFOAOAUUFAAD1m556hGzlmtojKnzmhbWU5CgyknAHAqKCiAB6zYXVlOisudOrNdE70yPJVyAgA1QEEB3Oy/u49o5JzVKil36ax2TfQvygkA1FiA2QEAf7Jq7zHdPGeNSspdOrs95QQAaouCArjJ2n3HddPsVVUf67x8PeUEAGqLggK4wab9edUuJWbMCQCcHgoKcJp+OGDX9a9lVE1f/9oIrtYBgNNFQQFOw485Dg2flSFHSYVSkxoxfT0AuAkFBailnbn5GvZqho4XlatbYpRm39SbuxIDgJtQUIBa2HO4QNe9lqGjhWXq3CxSb9zUR5GhwWbHAgC/QUEBamjf0UJd92qGDueXKiUuQvNG9pWtAeUEANyJggLUwP7jRbru1QzlOErUtmlDzb+lrxqFh5gdCwD8DgUFOEUH7cW69tWVOpBXrFZNwjX/1r6KaWg1OxYA+CUKCnAKjhSU6vrXMpR1rFgtYxro7Vv7qWlEqNmxAMBvUVCAk7AXl+uGWau0+3ChEmyhmn9rP8VGUk4AwJMoKMCfKCyt0E2zV2nrQYcaN7Rq/q391CwqzOxYAOD3KCjAHygpd2rUvDVal5knW1iw3rylj5Ibh5sdCwDqBQoKcALlTpfuemu9vt91VOEhgZo7so9S4iLNjgUA9QYFBfgNp8vQuHc36sttubIGBei1Eb3VPTHK7FgAUK9QUIBfMQxDD36wWR9uyFZQgEUzr09VWusYs2MBQL1DQQF+ZhiGHv9km95elaUAi/Tc0B46O6Wp2bEAoF6ioAA/m7F0l15bvleS9MSQrrqoa7zJiQCg/qKgAJJe+26PnvlyhyRp8iUddXWvRJMTAUD9RkFBvbdwTZYe+2SbJGnc+e1004BkkxMBACgoqNc+35KjCf/eJEm67cxWGn12G5MTAQAkCgrqsZV7juqut9fLZUhX92quCYNTZLFYzI4FABAFBfXUlmy7bp27RmUVLp3XMVZTL+9COQEAL0JBQb2z72ihRry+WvmlFeqTHK3nr+2hoEB+FQDAm/CqjHrlkKNE18/K0JGCUnWMj9RrI3opNDjQ7FgAgN+goKDesBeX64bXVynrWLGSYhpo7sg+igwNNjsWAOAEKCioF4rLnLpl7mr9mJOvJhFWzRvZV00irGbHAgD8AQoK/F7lnYnXafVPxxURGqQ3RvZRi5gGZscCAPwJCgr8mstl6G//3qSlPx6SNShAs0b0Vof4SLNjAQBOgoICv2UYhqZ+uk3vrzugwACLXhrWU32So82OBQA4BRQU+K1Xv9tTdfO/6UO66twOsSYnAgCcKgoK/NKHGw5o6qc/SpL+fmGKhqQ2NzkRAKAmKCjwO9/vOqJx726UJN08MFmjzmxtciIAQE1RUOBXtmY7dPu8tSp3Grqoa7weuLCD2ZEAALVAQYHf2H+8SDfOXqX80gr1TY7WP6/qpoAA7q8DAL6IggK/kFdUphtnr9ah/FK1i22oV25gCnsA8GUUFPi8knKnbpm7RrsOFSjeFqq5I/vIFsYU9gDgyygo8GlOl6ExCzZozb7KWWLn3NRH8bYws2MBAE4TBQU+yzAMPfLxFi3ZkqOQwAC9ekMvtY+LMDsWAMANKCjwWTOX7dEbK/bJYpGevqab+rWKMTsSAMBNKCjwSe+v268nl1ROxPbgRR11cdcEkxMBANyJggKfs3znEY1/b5Mk6dYzknXzwGSTEwEA3I2CAp+yPSdfd7y5VhUuQ5d0S9DEwUzEBgD+yO0FpWXLlrJYLL9bRo8eLUkqKSnR6NGjFRMTo4YNG2rIkCHKzc11dwz4oUOOEo2cs1r5pRXq0zJaT13VlYnYAMBPub2grF69WgcPHqxavvjiC0nSVVddJUm699579fHHH+vdd9/VsmXLlJ2drSuuuMLdMeBnisoqdPPcNTqQV6xWjcP1r+GpsgYxERsA+Ksgd++wSZMm1b5+4okn1Lp1a5111lmy2+2aNWuW3nrrLZ1zzjmSpNmzZ6tDhw5auXKl+vXr5+448ANOl6F73l6vzQfsig4P0eybeqtReIjZsQAAHuTRMShlZWV68803NXLkSFksFq1du1bl5eVKT0+v2iYlJUUtWrTQihUr/nA/paWlcjgc1RbUH1MWb9WX2w4pJChAr96QqqSYcLMjAQA8zKMF5YMPPlBeXp5uvPFGSVJOTo5CQkIUFRVVbbvY2Fjl5OT84X6mTZsmm81WtSQmJnowNbzJ7O/3as5/f5IkPXN1d6UmRZsbCABQJzxaUGbNmqXBgwcrIeH05qiYOHGi7HZ71ZKVleWmhPBmn2/J0aOLt0qSJgxO0UVd401OBACoK24fg/KLffv26csvv9T7779ftS4uLk5lZWXKy8urdhYlNzdXcXFxf7gvq9Uqq9XqqajwQpv25+n/FmyQYUjX9mmh285sZXYkAEAd8tgZlNmzZ6tp06a66KKLqtalpqYqODhYS5curVq3fft2ZWZmKi0tzVNR4GP2Hy/SyDlrVFzu1FntmmjKpZ1ksXA5MQDUJx45g+JyuTR79myNGDFCQUH/+xY2m00333yzxo4dq+joaEVGRuruu+9WWloaV/BAkuQoKdfIOat1pKBUKXEReuG6HgoKZD5BAKhvPFJQvvzyS2VmZmrkyJG/e+yZZ55RQECAhgwZotLSUg0aNEgvvfSSJ2LAx5RVuHTHm2u1I7dAsZFWzb6ptyJCg82OBQAwgcUwDMPsEDXlcDhks9lkt9sVGRlpdhy4gWEYmvDvzXpnTZbCQwK18PY0dUqwmR0LAOBGNXn/5tw5vMJr3+3VO2uyFGCRXriuJ+UEAOo5CgpM9+XWXE39zzZJ0oMXddTZKU1NTgQAMBsFBabadtCh/1uwXoYhXde3hW4a0NLsSAAAL0BBgWkO55fqlrlrVFjm1IA2MXrkr1xODACoREGBKUrKnRo17393J37pulQFczkxAOBnvCOgzhmGofHvbdL6zDzZwoI168besjXgcmIAwP9QUFDnnv9qlz7amK2gAItevr6nkhtzd2IAQHUUFNSpxZuy9fQXOyRJUy7rrP6tG5ucCADgjSgoqDMbs/J038KNkqSbBybr2j4tTE4EAPBWFBTUiYP2Yt36xhqVVrh0TkpT/f3CDmZHAgB4MQoKPK6orEK3zF2jQ/mlah8boeeGdldgAJcTAwD+GAUFHuVyGRr7zkZtyXYoJjxEr43oxQ0AAQAnRUGBRz23dKeWbMlRSGCAXrkhVYnRDcyOBADwARQUeMx/Nh/Uc0t3SpKmXtFFqUnRJicCAPgKCgo8YttBh8b+6oqdK1Obm5wIAOBLKChwu2OFZbr1jTUqLnfqjLaNNXFwitmRAAA+hoICtyp3unTn/LXaf7xYLWMa6IVreyqIe+wAAGqIdw641aMfb9XKPcfU0BqkV2/oxT12AAC1QkGB28zP2Kd5K/fJYpGevaa72sZGmB0JAOCjKChwi4w9RzX5wy2SpHHnt1d6x1iTEwEAfBkFBadt//Ei3TF/nSpchi7uGq87/9La7EgAAB9HQcFpKSqr0K1vrNWxwjJ1SojUP67sJouFaewBAKeHgoJaMwxD97+7SdsOOtS4YYheuaGXwkICzY4FAPADFBTU2gtf7dInmw8qONCil69PVbOoMLMjAQD8BAUFtbJ0W67++cUOSdKjl3ZW75ZMYw8AcB8KCmpsz+ECjVmwQZI0vF+Sru3TwtxAAAC/Q0FBjRSUVui2eWuVX1qh3i0badLFHc2OBADwQxQUnLLKQbEbtfNQgWIjrXpxWE+FBPFPCADgfry74JS9vGy3/vNDjoIDLXppWKqaRoSaHQkA4KcoKDgly3Yc1j8+2y5JevivnZSa1MjkRAAAf0ZBwUllHi3SPW+vl2FIQ3sn6joGxQIAPIyCgj9VXObUbW+ulb24XN0So/TIpZ2YKRYA4HEUFPwhwzA04f3/zRQ78/qesgYxUywAwPMoKPhDr3//kz7ckK2gAItevK6n4m3MFAsAqBsUFJzQf3cf0dRPt0mSHriog/q2ijE5EQCgPqGg4Hey84p191vr5XQZurxHM93Yv6XZkQAA9QwFBdWUlDt1+5trdbSwTB3jIzX18i4MigUA1DkKCqqZ/OEWbdpvV1SDYP1reKrCQhgUCwCoexQUVHlndabeWZOlAIv0/LU9lBjdwOxIAIB6ioICSdIPB+ya9OEWSdJ957fXGW2bmJwIAFCfUVAge1G57pi/VmUVLp2b0lR3nNXa7EgAgHqOglLPuVyGxi7coKxjxUqMDtPTV3dXQACDYgEA5qKg1HMvL9utpT8eUkhQgF4elipbg2CzIwEAQEGpz77fdUT//LzyDsVTLu2kzs1sJicCAKASBaWeOmgv1j1vr5fLkK7u1VzX9OYOxQAA70FBqYfKKlwaPX9d1WRsj17a2exIAABUQ0Gph6Z+uk3rMvMUGRqkmdenKjSYydgAAN6FglLPfLQxW3P++5Mk6emru6tFDJOxAQC8DwWlHtmZm68J/94kSRp9dmuld4w1OREAACdGQaknCkordPuba1VU5tSANjEae157syMBAPCHKCj1gGEYmvDvTdp9uFBxkaF6bmgPBTIZGwDAi1FQ6oE3VuzT4k0HFRRg0YvDeqpxQ6vZkQAA+FMUFD+3aX+eHvtkqyTp7xd2UGpSI5MTAQBwchQUP2YvLtfot9ap3GloUKdY3TSgpdmRAAA4JRQUP2UYhsa/t7HqJoDTr+wmi4VxJwAA30BB8VOzv/9Jn23JVXCgRS9e11O2MG4CCADwHR4pKAcOHND111+vmJgYhYWFqUuXLlqzZk3V44Zh6KGHHlJ8fLzCwsKUnp6unTt3eiJKvbQhK0/T/rNNkvTAhR3UtXmUuYEAAKghtxeU48ePa8CAAQoODtZ//vMfbd26Vf/85z/VqNH/BmdOnz5dM2bM0MyZM5WRkaHw8HANGjRIJSUl7o5T79iLyjV6fuW4k8Gd4zSif0uzIwEAUGMWwzAMd+5wwoQJ+v777/Xdd9+d8HHDMJSQkKD77rtP48aNkyTZ7XbFxsZqzpw5Gjp06Em/h8PhkM1mk91uV2RkpDvj+zTDMDRq3lp9sTVXLaIbaPE9AxUZykc7AADvUJP3b7efQfnoo4/Uq1cvXXXVVWratKl69OihV199terxvXv3KicnR+np6VXrbDab+vbtqxUrVpxwn6WlpXI4HNUW/N6s5Xv1xdZchQQG6MXrelJOAAA+y+0FZc+ePXr55ZfVtm1bffbZZ7rjjjt0zz33aO7cuZKknJwcSVJsbPX7wMTGxlY99lvTpk2TzWarWhITE90d2+etyzyuJ/7zoyTpwYs7qEtzm8mJAACoPbcXFJfLpZ49e2rq1Knq0aOHRo0apVtvvVUzZ86s9T4nTpwou91etWRlZbkxse/LKyrT3W+tV4XL0EVd4jW8X5LZkQAAOC1uLyjx8fHq2LFjtXUdOnRQZmamJCkuLk6SlJubW22b3Nzcqsd+y2q1KjIystqCSoZhaNy7G3Ugr1hJMQ30xJAuzHcCAPB5bi8oAwYM0Pbt26ut27Fjh5KSKv+vPjk5WXFxcVq6dGnV4w6HQxkZGUpLS3N3HL/36nd79OW2QwoJqhx3EsG4EwCAHwhy9w7vvfde9e/fX1OnTtXVV1+tVatW6ZVXXtErr7wiSbJYLBozZowee+wxtW3bVsnJyZo0aZISEhJ02WWXuTuOX1u775ieXFJZBh+6uKM6N2PcCQDAP7i9oPTu3VuLFi3SxIkT9eijjyo5OVnPPvushg0bVrXN+PHjVVhYqFGjRikvL08DBw7UkiVLFBoa6u44fuuXcSdOl6GLu8ZrWN8WZkcCAMBt3D4PSl2o7/OgGIah2+at1edbc9UypoE+vnsgH+0AALyeqfOgwPPeXLlPn2+tvM/O89cy7gQA4H8oKD5ma7ZDUz6pvM/OhMHMdwIA8E8UFB9SVFahu95ep7IKl85NaaqRA1qaHQkAAI+goPiQhz/aoj2HCxUbadU/rurGfCcAAL9FQfERH244oIVr9stikZ69poeiw0PMjgQAgMdQUHzAvqOFemDRD5Kku89uo7TWMSYnAgDAsygoXq6swqW7316vgtIK9W7ZSPec29bsSAAAeBwFxcs99fl2bdpvly0sWM8N7aGgQP6TAQD8H+92Xuzr7Yf0yrd7JEn/uLKrEqLCTE4EAEDdoKB4qUOOEo1buFGSNCItSed3OvGdngEA8EcUFC/kdBka884GHS0sU4f4SE28sIPZkQAAqFMUFC80c9lu/Xf3UYUFB+qF63ooNDjQ7EgAANQpCoqXWbvvmJ7+Yock6dFLO6l1k4YmJwIAoO5RULyIo6Rc97y9QU6Xocu6J+jK1OZmRwIAwBQUFC8y6YMfdCCvWInRYZpyWWemsgcA1FsUFC+xaP1+fbghW4EBFj03tIciQoPNjgQAgGkoKF4g82iRJn2wRZL0f+e2Vc8WjUxOBACAuSgoJqtwujTmnf9NZT/67DZmRwIAwHQUFJPN+GqX1mXmKcIapKev7q7AAMadAABAQTHRmp+O6YWvdkqSHru8sxKjG5icCAAA70BBMYmjpFz/t2CDXIZ0RY9murR7M7MjAQDgNSgoJvnlkuIW0Q30yKWdzI4DAIBXoaCY4NeXFD87tDuXFAMA8BsUlDrGJcUAAJwcBaUO/fqS4l5JjXTnX1qbHQkAAK9EQalDv76k+JlruisokMMPAMCJ8A5ZR1ZzSTEAAKeMglIH7MXlGsMlxQAAnDIKSh14+KMtXFIMAEANUFA8bPGmbC1af0ABFumZa7pxSTEAAKeAguJBOfYSPbDoB0nS6LPbKDUp2uREAAD4BgqKh7hchu5/b6PsxeXq0syme85ta3YkAAB8BgXFQ+at3Kfvdh6RNShAz1zTXcFcUgwAwCnjXdMDdh0q0NRPt0mS/n5hB7Vp2tDkRAAA+BYKipuVVbh07zsbVFrh0hltG2t4vySzIwEA4HMoKG72/Fc7tfmAXbawYD11VTcFBFjMjgQAgM+hoLjR2n3H9eLXuyRJUy/votjIUJMTAQDgmygoblJYWqGxCytni728RzNd1DXe7EgAAPgsCoqbPPbJVu07WqRmUWHMFgsAwGmioLjBl1tz9faqLFks0lNXdVMks8UCAHBaKCin6UhBqSa8v0mSdMvAZKW1jjE5EQAAvo+CchoMw9CEf2/WkYIypcRFaNyg9mZHAgDAL1BQTsPCNVn6cluuQgIrZ4u1BgWaHQkAAL9AQamlzKNFevTjrZKk+85vpw7xkSYnAgDAf1BQasHpMjTu3Y0qLHOqb3K0bjmjldmRAADwKxSUWpj9/V6t+umYwkMC9dRV3RTIbLEAALgVBaWGdh3K1/TPtkuSHry4oxKjG5icCAAA/0NBqYEKp0v3LdyosgqXzmrXREN7J5odCQAAv0RBqYGZy3Zr4367IkOD9OSQrrJY+GgHAABPoKCcoi3Zdj23dKck6dFLOyvOxo0AAQDwFArKKSitcOq+hRtV7jR0Qac4Xdo9wexIAAD4NQrKKZixdKd+zMlXTHiIHru8Mx/tAADgYRSUk1ifeVwvf7NbkvT45Z3VuKHV5EQAAPg/CsqfKC6r/GjHZUiXdU/QBZ3jzY4EAEC9QEH5E//4bLv2HClUbKRVj/y1s9lxAACoNygof2DF7qN6/fu9kqQnhnSVrUGwyYkAAKg/3F5QHn74YVkslmpLSkpK1eMlJSUaPXq0YmJi1LBhQw0ZMkS5ubnujnFaCkordP97GyVJ1/ZJ1Nntm5qcCACA+sUjZ1A6deqkgwcPVi3Lly+veuzee+/Vxx9/rHfffVfLli1Tdna2rrjiCk/EqLXHP9mm/ceL1bxRmB64qKPZcQAAqHeCPLLToCDFxcX9br3dbtesWbP01ltv6ZxzzpEkzZ49Wx06dNDKlSvVr18/T8SpkW+2H9LbqzIlSf+4spsaWj1yiAAAwJ/wyBmUnTt3KiEhQa1atdKwYcOUmVn5hr927VqVl5crPT29atuUlBS1aNFCK1as+MP9lZaWyuFwVFs8wV5Urgn/3ixJumlAS6W1jvHI9wEAAH/O7QWlb9++mjNnjpYsWaKXX35Ze/fu1RlnnKH8/Hzl5OQoJCREUVFR1Z4TGxurnJycP9zntGnTZLPZqpbERM/cpO+ZL3cox1GiVo3DNX5QysmfAAAAPMLtn18MHjy46u9du3ZV3759lZSUpIULFyosLKxW+5w4caLGjh1b9bXD4fBISRmT3lb24nINT0tSWEig2/cPAABOjccHWERFRaldu3batWuXzjvvPJWVlSkvL6/aWZTc3NwTjln5hdVqldXq+RlcoxqE6Jlrunv8+wAAgD/n8XlQCgoKtHv3bsXHxys1NVXBwcFaunRp1ePbt29XZmam0tLSPB0FAAD4CLefQRk3bpwuueQSJSUlKTs7W5MnT1ZgYKCuvfZa2Ww23XzzzRo7dqyio6MVGRmpu+++W2lpaV5xBQ8AAPAObi8o+/fv17XXXqujR4+qSZMmGjhwoFauXKkmTZpIkp555hkFBARoyJAhKi0t1aBBg/TSSy+5OwYAAPBhFsMwDLND1JTD4ZDNZpPdbldkZKTZcQAAwCmoyfs39+IBAABeh4ICAAC8DgUFAAB4HQoKAADwOhQUAADgdSgoAADA61BQAACA16GgAAAAr0NBAQAAXsfjdzP2hF8mv3U4HCYnAQAAp+qX9+1TmcTeJwtKfn6+JCkxMdHkJAAAoKby8/Nls9n+dBufvBePy+VSdna2IiIiZLFY3Lpvh8OhxMREZWVlcZ8fD+I41w2Oc93gONcNjnPd8dSxNgxD+fn5SkhIUEDAn48y8ckzKAEBAWrevLlHv0dkZCS/AHWA41w3OM51g+NcNzjOdccTx/pkZ05+wSBZAADgdSgoAADA61BQfsNqtWry5MmyWq1mR/FrHOe6wXGuGxznusFxrjvecKx9cpAsAADwb5xBAQAAXoeCAgAAvA4FBQAAeB0KCgAA8Dr1sqC8+OKLatmypUJDQ9W3b1+tWrXqT7d/9913lZKSotDQUHXp0kWffvppHSX1bTU5zq+++qrOOOMMNWrUSI0aNVJ6evpJ/7ugUk3/Pf9iwYIFslgsuuyyyzwb0E/U9Djn5eVp9OjRio+Pl9VqVbt27XjtOAU1Pc7PPvus2rdvr7CwMCUmJuree+9VSUlJHaX1Td9++60uueQSJSQkyGKx6IMPPjjpc7755hv17NlTVqtVbdq00Zw5czyeU0Y9s2DBAiMkJMR4/fXXjS1bthi33nqrERUVZeTm5p5w+++//94IDAw0pk+fbmzdutV48MEHjeDgYGPz5s11nNy31PQ4X3fddcaLL75orF+/3ti2bZtx4403Gjabzdi/f38dJ/ctNT3Ov9i7d6/RrFkz44wzzjAuvfTSugnrw2p6nEtLS41evXoZF154obF8+XJj7969xjfffGNs2LChjpP7lpoe5/nz5xtWq9WYP3++sXfvXuOzzz4z4uPjjXvvvbeOk/uWTz/91HjggQeM999/35BkLFq06E+337Nnj9GgQQNj7NixxtatW43nn3/eCAwMNJYsWeLRnPWuoPTp08cYPXp01ddOp9NISEgwpk2bdsLtr776auOiiy6qtq5v377Gbbfd5tGcvq6mx/m3KioqjIiICGPu3LmeiugXanOcKyoqjP79+xuvvfaaMWLECArKKajpcX755ZeNVq1aGWVlZXUV0S/U9DiPHj3aOOecc6qtGzt2rDFgwACP5vQnp1JQxo8fb3Tq1KnaumuuucYYNGiQB5MZRr36iKesrExr165Venp61bqAgAClp6drxYoVJ3zOihUrqm0vSYMGDfrD7VG74/xbRUVFKi8vV3R0tKdi+rzaHudHH31UTZs21c0331wXMX1ebY7zRx99pLS0NI0ePVqxsbHq3Lmzpk6dKqfTWVexfU5tjnP//v21du3aqo+B9uzZo08//VQXXnhhnWSuL8x6H/TJmwXW1pEjR+R0OhUbG1ttfWxsrH788ccTPicnJ+eE2+fk5Hgsp6+rzXH+rb/97W9KSEj43S8F/qc2x3n58uWaNWuWNmzYUAcJ/UNtjvOePXv01VdfadiwYfr000+1a9cu3XnnnSovL9fkyZPrIrbPqc1xvu6663TkyBENHDhQhmGooqJCt99+u/7+97/XReR644/eBx0Oh4qLixUWFuaR71uvzqDANzzxxBNasGCBFi1apNDQULPj+I38/HwNHz5cr776qho3bmx2HL/mcrnUtGlTvfLKK0pNTdU111yjBx54QDNnzjQ7ml/55ptvNHXqVL300ktat26d3n//fX3yySeaMmWK2dHgBvXqDErjxo0VGBio3Nzcautzc3MVFxd3wufExcXVaHvU7jj/4qmnntITTzyhL7/8Ul27dvVkTJ9X0+O8e/du/fTTT7rkkkuq1rlcLklSUFCQtm/frtatW3s2tA+qzb/n+Ph4BQcHKzAwsGpdhw4dlJOTo7KyMoWEhHg0sy+qzXGeNGmShg8frltuuUWS1KVLFxUWFmrUqFF64IEHFBDA/4O7wx+9D0ZGRnrs7IlUz86ghISEKDU1VUuXLq1a53K5tHTpUqWlpZ3wOWlpadW2l6QvvvjiD7dH7Y6zJE2fPl1TpkzRkiVL1KtXr7qI6tNqepxTUlK0efNmbdiwoWr561//qrPPPlsbNmxQYmJiXcb3GbX59zxgwADt2rWrqgBK0o4dOxQfH085+QO1Oc5FRUW/KyG/lEKD28y5jWnvgx4dguuFFixYYFitVmPOnDnG1q1bjVGjRhlRUVFGTk6OYRiGMXz4cGPChAlV23///fdGUFCQ8dRTTxnbtm0zJk+ezGXGp6Cmx/mJJ54wQkJCjPfee884ePBg1ZKfn2/Wj+ATanqcf4ureE5NTY9zZmamERERYdx1113G9u3bjcWLFxtNmzY1HnvsMbN+BJ9Q0+M8efJkIyIiwnj77beNPXv2GJ9//rnRunVr4+qrrzbrR/AJ+fn5xvr1643169cbkoynn37aWL9+vbFv3z7DMAxjwoQJxvDhw6u2/+Uy4/vvv9/Ytm2b8eKLL3KZsac8//zzRosWLYyQkBCjT58+xsqVK6seO+uss4wRI0ZU237hwoVGu3btjJCQEKNTp07GJ598UseJfVNNjnNSUpIh6XfL5MmT6z64j6npv+dfo6Ccupoe5//+979G3759DavVarRq1cp4/PHHjYqKijpO7XtqcpzLy8uNhx9+2GjdurURGhpqJCYmGnfeeadx/Pjxug/uQ77++usTvt7+cmxHjBhhnHXWWb97Tvfu3Y2QkBCjVatWxuzZsz2e02IYnAcDAADepV6NQQEAAL6BggIAALwOBQUAAHgdCgoAAPA6FBQAAOB1KCgAAMDrUFAAAIDXoaAAAACvQ0EBAABeh4ICAAC8DgUFAAB4HQoKAADwOv8PJIAOMy3lUjsAAAAASUVORK5CYII=",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# constantes\n",
    "L=1\n",
    "k=1\n",
    "S=100\n",
    "Tc=50\n",
    "n=5\n",
    "\n",
    "# Calcul à faire\n",
    "dx = L/(n-1)\n",
    "\n",
    "# Résoudre le problème\n",
    "# Déclaration de matrice et vecteur\n",
    "A=np.zeros([n,n])\n",
    "b=np.zeros(n)\n",
    "\n",
    "# Remplir / assembler ma matrice et mon vecteur\n",
    "# Condition limite à gauche\n",
    "A[0,0]=1\n",
    "b[0] = Tc\n",
    "\n",
    "# Condition limite à droite\n",
    "A[-1,-1]= 3\n",
    "A[-1,-2]=-4\n",
    "A[-1,-3]=1\n",
    "b[-1]=0\n",
    "\n",
    "# Intérieur du domaine de calcul\n",
    "for i in range(1,n-1):\n",
    "    A[i,i]=-2\n",
    "    A[i,i-1]=1\n",
    "    A[i,i+1]=1\n",
    "    b[i] = -S * dx**2 / k\n",
    "\n",
    "#Solution\n",
    "T=np.linalg.solve(A,b)\n",
    "x=np.linspace(0,L,n)\n",
    "plt.plot(x,T,'-')\n",
    "plt.show()\n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.9.13 64-bit",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  },
  "orig_nbformat": 4,
  "vscode": {
   "interpreter": {
    "hash": "b0fa6594d8f4cbf19f97940f81e996739fb7646882a419484c72d19e05852a7e"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
